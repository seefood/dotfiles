{
  "statusLine": {
    "type": "command",
    "command": "input=$(cat); dir=$(echo \"$input\" | jq -r '.workspace.current_dir'); if [ -d \"$dir/.git\" ]; then cd \"$dir\"; branch=$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo 'no-branch'); if git diff-index --quiet HEAD -- 2>/dev/null; then status='clean'; else status='dirty'; fi; printf '%s [%s:%s]' \"$dir\" \"$branch\" \"$status\"; else printf '%s' \"$dir\"; fi"
  },
  "hooks": {
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/hooks/play-sound.sh notification"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/hooks/play-sound.sh"
          }
        ]
      },
      {
        "matcher": "*",
        "hooks": [
          {
            "type": "command",
            "command": "claudekit-hooks run check-todos"
          },
          {
            "type": "command",
            "command": "claudekit-hooks run self-review"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/hooks/play-sound.sh done"
          }
        ]
      },
      {
        "matcher": "Edit|MultiEdit",
        "hooks": [
          {
            # "type": "command",
            #"command": "claudekit-hooks run check-unused-parameters"
          }
        ]
      }
    ],
    "PreToolUse": [
    ],
    "SubagentStop": [],
    "SessionStart": [],
    "UserPromptSubmit": [
      {
        "matcher": "*",
        "hooks": [
          {
            "type": "command",
            "command": "claudekit-hooks run codebase-map"
          },
          {
            "type": "command",
            "command": "claudekit-hooks run thinking-level"
          }
        ]
      }
    ]
  }
}
